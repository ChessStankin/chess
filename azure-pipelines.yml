# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:  
- deployment: VMDeploy
  displayName: web
  environment:
    name:  vmenvs
    resourceType: VirtualMachine
    tags: web
  strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                if [ -d "/home/azureuser/chess" ] 
                then
                    cd /home/azureuser/chess
                    git pull https://$(USER):$(TOKEN)@github.com/ChessStankin/chess.git master
                else
                    git clone https://$(USER):$(TOKEN)@github.com/ChessStankin/chess.git /home/azureuser/chess
                fi
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                cd /home/azureuser/chess
                touch variables.env
                echo SECRET_KEY=$(SECRET_KEY) >> variables.env
                echo POSTGRESQL_USER=$(POSTGRESQL_USER) >> variables.env
                echo POSTGRESQL_PASSWORD=$(POSTGRESQL_PASSWORD) >> variables.env
                echo POSTGRESQL_DATABASE=$(POSTGRESQL_DATABASE) >> variables.env
                echo POSTGRESQL_HOST=$(POSTGRESQL_HOST) >> variables.env
                echo POSTGRESQL_PORT=$(POSTGRESQL_PORT) >> variables.env
                sudo docker-compose up -d --build
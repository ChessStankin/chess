name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      POSTGRESQL_USER: ${{ secrets.POSTGRESQL_USER }}
      POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
      POSTGRESQL_DATABASE: ${{ secrets.POSTGRESQL_DATABASE }}
      POSTGRESQL_HOST: ${{ secrets.POSTGRESQL_HOST }}
      POSTGRESQL_PORT: ${{ secrets.POSTGRESQL_PORT }} 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r web/requirements.txt
        pip install -r lib/chess_calculator/requirements.txt
    - name: Run Django Tests
      run: |
       python web/src/chess/manage.py test
  deployment: VMDeploy
  displayName: web
  environment:
    name: vmenvs
    resourceType: VirtualMachine
  strategy:
      rolling:
        maxParallel: 5  #for percentages, mention as x%
        preDeploy:
          steps:
          - download: current
            artifact: drop
          - script: echo initialize, cleanup, backup, install certs
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
        routeTraffic:
          steps:
          - script: echo routing traffic
        postRouteTraffic:
          steps:
          - script: echo health check post-route traffic
        on:
          failure:
            steps:
            - script: echo Restore from backup! This is on failure
          success:
            steps:
            - script: echo Notify! This is on success